# Name of the tunnel you want to run
tunnel: home-external-ingress
credentials-file: /etc/cloudflared/creds/credentials.json
# Serves the metrics server under /metrics and the readiness server under /ready
metrics: 0.0.0.0:2000
# Autoupdates applied in a k8s pod will be lost when the pod is removed or restarted, so
# autoupdate doesn't make sense in Kubernetes. However, outside of Kubernetes, we strongly
# recommend using autoupdate.
no-autoupdate: true

originRequest:
  noTLSVerify: true

# The `ingress` block tells cloudflared which local service to route incoming
# requests to. For more about ingress rules, see
# https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/configuration/ingress
#
# Remember, these rules route traffic from cloudflared to a local service. To route traffic
# from the internet to cloudflared, run `cloudflared tunnel route dns <tunnel> <hostname>`.
# E.g. `cloudflared tunnel route dns example-tunnel tunnel.example.com`.
ingress:
- hostname: 'joshcorp.co'
  service: http://joshcorp-landing.default.svc
- hostname: 'argocd.joshcorp.co'
  service: http://argocd-server.argocd.svc
- hostname: 'radarr.joshcorp.co'
  service: http://radarr.media.svc
- hostname: 'sonarr.joshcorp.co'
  service: http://sonarr.media.svc
- hostname: 'lidarr.joshcorp.co'
  service: http://lidarrr.media.svc
- hostname: 'qbittorrent.joshcorp.co'
  service: http://qbittorrent.media.svc
- hostname: 'sabnzbd.joshcorp.co'
  service: http://sabnzbd.media.svc
- hostname: 'overseerr.joshcorp.co'
  service: http://overseerr.media.svc
# - hostname: '*.joshcorp.co'
#   service: https://ingress-nginx-controller
# This rule matches any traffic which didn't match a previous rule, and responds with HTTP 404.
- service: http_status:404
